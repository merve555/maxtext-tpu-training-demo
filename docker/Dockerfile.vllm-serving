# vLLM GPU Serving Dockerfile for fine-tuned Gemma 2-2B models
FROM nvidia/cuda:12.1-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    git \
    wget \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic link for python
RUN ln -s /usr/bin/python3 /usr/bin/python

# Upgrade pip
RUN python -m pip install --upgrade pip

# Install PyTorch with CUDA support
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Install vLLM and dependencies
RUN pip install vllm==0.6.2 \
    transformers \
    accelerate \
    huggingface-hub \
    google-cloud-storage \
    gcsfs

# Install additional dependencies for serving
RUN pip install fastapi \
    uvicorn \
    requests \
    numpy \
    pydantic

# Set working directory
WORKDIR /app

# Create a simple health check script
RUN echo '#!/bin/bash\necho "vLLM Server is ready"\npython -c "import torch; print(f\"CUDA available: {torch.cuda.is_available()}\")"\n' > /app/health_check.sh && \
    chmod +x /app/health_check.sh

# Default command
CMD ["/bin/bash"]
