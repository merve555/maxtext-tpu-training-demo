apiVersion: apps/v1
kind: Deployment
metadata:
  name: step5-gpu-serving-gemma2b-ultrachat
  namespace: default
  labels:
    app: gpu-serving
    model: gemma2-2b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gpu-serving
      model: gemma2-2b
  template:
    metadata:
      labels:
        app: gpu-serving
        model: gemma2-2b
      annotations:
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/cpu-limit: "0"
        gke-gcsfuse/memory-limit: "0"
        gke-gcsfuse/ephemeral-storage-limit: "0"
        gke-gcsfuse/use-workload-identity: "true"
    spec:
      restartPolicy: Always
      serviceAccountName: maxtext-sa
      terminationGracePeriodSeconds: 30
      nodeSelector:
        cloud.google.com/gke-accelerator: "nvidia-tesla-t4"
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Equal"
        value: "present"
        effect: "NoSchedule"
      containers:
      - name: vllm-server
        image: us-east5-docker.pkg.dev/YOUR_PROJECT_ID/YOUR_REPO_NAME/vllm-server:latest
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -ex
          echo "Step 6: Serving fine-tuned ${MODEL_NAME} model on GPU with vLLM..."

          # Define paths
          HF_MODEL_PATH="${HF_OUTPUT_BASE_DIR}/${MODEL_NAME}-ultrachat"

          echo "Starting vLLM server for fine-tuned ${MODEL_NAME} model..."
          echo "Model path: ${HF_MODEL_PATH}"
          echo "--- GPU Info ---"
          nvidia-smi
          echo "----------------"

          # Start vLLM server
          python -m vllm.entrypoints.openai.api_server \
            --model ${HF_MODEL_PATH} \
            --host 0.0.0.0 \
            --port 8000 \
            --served-model-name ${MODEL_NAME}-ultrachat \
            --max-model-len 4096 \
            --tensor-parallel-size 1 \
            --gpu-memory-utilization 0.9 \
            --trust-remote-code

        env:
        - name: PROJECT_ID
          value: "YOUR_PROJECT_ID"
        - name: GCS_BUCKET
          value: "YOUR_ARTIFACTS_BUCKET"
        - name: HUGGINGFACE_TOKEN
          value: "YOUR_HUGGINGFACE_TOKEN"
        - name: MODEL_NAME
          value: "gemma2-2b"
        - name: HF_OUTPUT_BASE_DIR
          value: "/gcs/artifacts/finetuned-hf-models"
        - name: GOOGLE_CLOUD_PROJECT
          value: "YOUR_PROJECT_ID"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        ports:
        - containerPort: 8000
          name: http
        resources:
          limits:
            nvidia.com/gpu: 1
            cpu: "4"
            memory: "16Gi"
          requests:
            nvidia.com/gpu: 1
            cpu: "4"
            memory: "16Gi"
        volumeMounts:
        - name: gcs-artifacts
          mountPath: /gcs/artifacts
        - name: workdir
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: gcs-artifacts
        csi:
          driver: gcsfuse.csi.storage.gke.io
          readOnly: false
          volumeAttributes:
            bucketName: YOUR_ARTIFACTS_BUCKET
            mountOptions: implicit-dirs,file-mode=0666,dir-mode=0777
      - name: workdir
        emptyDir:
          sizeLimit: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: step6-gpu-serving-service
  namespace: default
  labels:
    app: gpu-serving
spec:
  type: LoadBalancer
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: gpu-serving
    model: gemma2-2b
